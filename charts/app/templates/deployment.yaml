apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- range $secretVolume := .Values.secretVolume }}
        - name: {{ $secretVolume }}
          secret:
            secretName: {{ $secretVolume }}
        {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
          {{- range $configRef := .Values.configMapRef }}
          - configMapRef:
              name: "{{ $configRef }}"
          {{- end }}
          {{- range $secretRef := .Values.secretRef }}
          - secretRef:
              name: "{{ $secretRef }}"
          {{- end }}
          ports:
              - containerPort: {{ .Values.service.port }}
          volumeMounts:
            {{- range $secretVolume := .Values.secretVolume }}
            - name: {{ $secretVolume }}
              mountPath: "/var/www/html/secrets/"
              readOnly: true
            {{- end }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}

